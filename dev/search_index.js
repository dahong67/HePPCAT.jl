var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = HePPCAT","category":"page"},{"location":"#HePPCAT:-HEteroscedastic-Probabilistic-PCA-Technique","page":"Home","title":"HePPCAT: HEteroscedastic Probabilistic PCA Technique","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HePPCAT.","category":"page"},{"location":"","page":"Home","title":"Home","text":"👋 This package provides research code and work is ongoing. If you are interested in using it in your own research, I'd love to hear from you and collaborate! Feel free to write: dahong67@wharton.upenn.edu","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please cite the following paper for this technique:","category":"page"},{"location":"","page":"Home","title":"Home","text":"David Hong, Kyle Gilman, Laura Balzano, Jeffrey A. Fessler. \"HePPCAT: Probabilistic PCA for Data with Heteroscedastic Noise\", IEEE Transactions on Signal Processing 69:4819-4834, Aug. 2021. https://doi.org/10.1109/TSP.2021.3104979 https://arxiv.org/abs/2101.03468.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In BibTeX form:","category":"page"},{"location":"","page":"Home","title":"Home","text":"@article{hgbf2021heppcat,\n  title   = \"{HePPCAT}: Probabilistic {PCA} for Data with Heteroscedastic Noise\",\n  author  = \"David Hong and Kyle Gilman and Laura Balzano and Jeffrey A. Fessler\",\n  journal = \"{IEEE} Transactions on Signal Processing\",\n  year    = \"2021\",\n  volume  = \"69\",\n  pages   = \"4819--4834\",\n  DOI     = \"10.1109/tsp.2021.3104979\",\n}","category":"page"},{"location":"#Docstrings","page":"Home","title":"Docstrings","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HePPCAT]","category":"page"},{"location":"#HePPCAT.HePPCAT","page":"Home","title":"HePPCAT.HePPCAT","text":"Heteroscedastic PPCA Technique (HePPCAT) module. Provides probabilistic PCA for data with samples of heterogeneous quality (heteroscedastic noise).\n\n\n\n\n\n","category":"module"},{"location":"#HePPCAT.ArmijoSearch","page":"Home","title":"HePPCAT.ArmijoSearch","text":"ArmijoSearch{S<:Integer,T<:AbstractFloat}\n\nArmijo line search with parameters:\n\nmaxsearches :: S  maximum number of line searches\nstepsize    :: T  initial stepsize\ncontraction :: T  contraction factor\ntol         :: T  tolerance for sufficient decrease\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.CubicSolvableMinorizer","page":"Home","title":"HePPCAT.CubicSolvableMinorizer","text":"CubicSolvableMinorizer\n\nMinorize maximize update with cubic solvable minorizer. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.DifferenceOfConcave","page":"Home","title":"HePPCAT.DifferenceOfConcave","text":"DifferenceOfConcave\n\nDifference of concave update method. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.ExpectationMaximization","page":"Home","title":"HePPCAT.ExpectationMaximization","text":"ExpectationMaximization\n\nExpectation maximization update method. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.HePPCATModel","page":"Home","title":"HePPCAT.HePPCATModel","text":"HePPCATModel{S<:Number,T<:Real}\n\nModel parameters for probabilistic PCA with noise that is heteroscedastic across samples. This is the return type of heppcat(_), the corresponding estimation function.\n\nProperties\n\nF  :: Matrix    factor matrix (computed via F = U*sqrt(Diagonal(λ))*Vt)\nU  :: Matrix{S} eigenvectors of factor covariance F*F'\nλ  :: Vector{T} eigenvalues of factor covariance F*F' (spike eigenvalues)\nVt :: Matrix{S} (transposed) eigenvectors of F'*F (i.e., right singular vectors of F)\nv  :: Vector{T} noise variances\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.HePPCATModel-Tuple{AbstractMatrix{T} where T, AbstractVector{T} where T, AbstractMatrix{T} where T, AbstractVector{T} where T}","page":"Home","title":"HePPCAT.HePPCATModel","text":"HePPCATModel(U::AbstractMatrix,λ::AbstractVector,Vt::AbstractMatrix,v::AbstractVector)\n\nConstruct HePPCATModel object from factor eigenstructure and noise variances.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.HePPCATModel-Tuple{AbstractMatrix{T} where T, AbstractVector{T} where T}","page":"Home","title":"HePPCAT.HePPCATModel","text":"HePPCATModel(F::AbstractMatrix,v::AbstractVector)\n\nConstruct HePPCATModel object from factor matrix and noise variances.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.InverseLipschitz","page":"Home","title":"HePPCAT.InverseLipschitz","text":"InverseLipschitz{T}\n\nInverse Lipschitz step size using bound function specified by field bound::T. Default choice is bound=LipBoundU2.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.MinorizeMaximize","page":"Home","title":"HePPCAT.MinorizeMaximize","text":"MinorizeMaximize\n\nMinorize maximize update method. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.OptimalQuadraticMinorizer","page":"Home","title":"HePPCAT.OptimalQuadraticMinorizer","text":"OptimalQuadraticMinorizer\n\nMinorize maximize update using quadratic minorizer with optimized curvature. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.ProjectedGradientAscent","page":"Home","title":"HePPCAT.ProjectedGradientAscent","text":"ProjectedGradientAscent{T}\n\nProjected gradient ascent update method. One field: stepsize::T.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.ProjectedVariance","page":"Home","title":"HePPCAT.ProjectedVariance","text":"ProjectedVariance{S,T}\n\nUpdate variance using method then project the variance so that the variance iterate does not go below varfloor.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.QuadraticMinorizer","page":"Home","title":"HePPCAT.QuadraticMinorizer","text":"QuadraticMinorizer\n\nMinorize maximize update using quadratic minorizer. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.QuadraticSolvableMinorizer","page":"Home","title":"HePPCAT.QuadraticSolvableMinorizer","text":"QuadraticSolvableMinorizer\n\nMinorize maximize update with quadratic solvable minorizer. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.RootFinding","page":"Home","title":"HePPCAT.RootFinding","text":"RootFinding\n\nRoot-finding (global maximization) update method. No fields.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.StiefelGradientAscent","page":"Home","title":"HePPCAT.StiefelGradientAscent","text":"StiefelGradientAscent{T}\n\nStiefel gradient ascent update method. One field: stepsize::T.\n\n\n\n\n\n","category":"type"},{"location":"#HePPCAT.F-NTuple{4, Any}","page":"Home","title":"HePPCAT.F","text":"F(U,λ,v,Y)\n\nObjective for the optimization problem w.r.t U.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.LipBoundU1-Tuple{HePPCATModel, Any}","page":"Home","title":"HePPCAT.LipBoundU1","text":"LipBoundU1(M::HePPCATModel,Y)\n\nLipschitz bound of objective w.r.t. U at M with data Y.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.LipBoundU2-Tuple{HePPCATModel, Any}","page":"Home","title":"HePPCAT.LipBoundU2","text":"LipBoundU2(M::HePPCATModel,Y)\n\nLipschitz bound of objective w.r.t. U at M with data Y.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.geodesic-Tuple{Any, Any, Any}","page":"Home","title":"HePPCAT.geodesic","text":"geodesic(U,X,t)\n\nGeodesic step of size t from U in direction of X along the Stiefel manifold.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.gradF-NTuple{4, Any}","page":"Home","title":"HePPCAT.gradF","text":"gradF(U,λ,v,Y)\n\nEuclidean gradient of objective for the optimization problem w.r.t U.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.heppcat-Tuple{Any, Any, Integer}","page":"Home","title":"HePPCAT.heppcat","text":"heppcat(Y,k,iters;init=homppca(Y,k),vknown=false)\n\nEstimate probabilistic PCA model for noise that is heteroscedastic across samples.\n\nInputs\n\nY : list of matrices (each column is a sample)\nk : number of factors\niters  : number of iterations to run\ninit   : initial model (will be modified in-place)\nvknown : variances are known (do not update) default false\nvarfloor : lower bound for variance iterates (useful if the iterates are degenerating to zero) default = 0\n\nOutput is a HePPCATModel object.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.homppca-Tuple{Any, Any}","page":"Home","title":"HePPCAT.homppca","text":"homppca(Y,k)\n\nEstimate probabilistic PCA model for noise that is homoscedastic across samples.\n\nInputs are:\n\nY : list of matrices (each column is a sample)\nk : number of factors\n\nOutput is a HePPCATModel object.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.loglikelihood-Tuple{HePPCATModel, Any}","page":"Home","title":"HePPCAT.loglikelihood","text":"loglikelihood(M::HePPCATModel,Y)\n\nLog-likelihood of model M with respect to data Y (dropping constant term).\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.polar-Tuple{Any}","page":"Home","title":"HePPCAT.polar","text":"polar(A)\n\nPolar factor of A.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.skew-Tuple{Any}","page":"Home","title":"HePPCAT.skew","text":"skew(A)\n\nSkew-symmetrize A by computing (A-A')/2.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateF!","page":"Home","title":"HePPCAT.updateF!","text":"updateF!(M::HePPCATModel,Y,method)\n\nUpdate the factor matrix in M with respect to data Y using method.\n\n\n\n\n\n","category":"function"},{"location":"#HePPCAT.updateF!-Tuple{HePPCATModel, Any, HePPCAT.ExpectationMaximization}","page":"Home","title":"HePPCAT.updateF!","text":"updateF!(M::HePPCATModel,Y,::ExpectationMaximization)\n\nExpectation maximization update of F.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateU!","page":"Home","title":"HePPCAT.updateU!","text":"updateU!(M::HePPCATModel,Y,method)\n\nUpdate the factor eigenvectors M.U with respect to data Y using method.\n\n\n\n\n\n","category":"function"},{"location":"#HePPCAT.updateU!-Tuple{HePPCATModel, Any, HePPCAT.MinorizeMaximize}","page":"Home","title":"HePPCAT.updateU!","text":"updateU!(M::HePPCATModel,Y,::MinorizeMaximize)\n\nMinorize maximize update of M.U using a linear minorizer.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateU!-Tuple{HePPCATModel, Any, HePPCAT.ProjectedGradientAscent{var\"#s19\"} where var\"#s19\"<:Number}","page":"Home","title":"HePPCAT.updateU!","text":"updateU!(M::HePPCATModel,Y,pga::ProjectedGradientAscent)\n\nProjected gradient ascent update of M.U. Supported step size types: Number (i.e., constant step size), InverseLipschitz, and ArmijoSearch (experimental).\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateU!-Tuple{HePPCATModel, Any, HePPCAT.StiefelGradientAscent{var\"#s19\"} where var\"#s19\"<:HePPCAT.ArmijoSearch}","page":"Home","title":"HePPCAT.updateU!","text":"updateU!(M::HePPCATModel,Y,sga::StiefelGradientAscent)\n\nStiefel gradient ascent update of M.U. Supported step size types: ArmijoSearch.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatev!-Tuple{HePPCATModel, Any, Any}","page":"Home","title":"HePPCAT.updatev!","text":"updatev!(M::HePPCATModel,Y,method)\n\nUpdate the noise variances M.v with respect to data Y using method. Internally calls updatevl(_) to update each entry.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,method)\n\nCompute update for lth noise variance vl with respect to data Yl using method.\n\n\n\n\n\n","category":"function"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.CubicSolvableMinorizer}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,::CubicSolvableMinorizer)\n\nMinorize maximize update of vl with cubic solvable minorizer.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.DifferenceOfConcave}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,::DifferenceOfConcave)\n\nDifference of concave update of vl.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.ExpectationMaximization}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,::ExpectationMaximization)\n\nExpectation maximization update of vl.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.ProjectedVariance}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,method::ProjectedVariance)\n\nUpdate variance using method.method then project the variance so that the variance iterate does not go below method.varfloor.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.QuadraticSolvableMinorizer}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,::QuadraticSolvableMinorizer)\n\nMinorize maximize update of vl with quadratic solvable minorizer.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updatevl-Tuple{Any, Any, Any, Any, HePPCAT.RootFinding}","page":"Home","title":"HePPCAT.updatevl","text":"updatevl(vl,U,λ,Yl,::RootFinding)\n\nRoot-finding (global maximization) update of vl.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλ!-Tuple{HePPCATModel, Any, Any}","page":"Home","title":"HePPCAT.updateλ!","text":"updateλ!(M::HePPCATModel,Y,method)\n\nUpdate the factor eigenvalues M.λ with respect to data Y using method. Internally calls updateλj(_) to update each entry.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,method)\n\nCompute update for jth factor eigenvalue λj with respect to data Y using method.\n\n\n\n\n\n","category":"function"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.DifferenceOfConcave}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::DifferenceOfConcave)\n\nDifference of concave update of λj.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.ExpectationMaximization}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::ExpectationMaximization)\n\nExpectation maximization update of λj.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.MinorizeMaximize}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::MinorizeMaximize)\n\nMinorize maximize update of λj using the minorizer from\n\nY. Sun, A. Breloy, P. Babu, D. P. Palomar, F. Pascal, and G. Ginolhac, \"Low-complexity algorithms for low rank clutter parameters estimation in radar systems,\" IEEE Transactions on Signal Processing, vol. 64, no. 8, pp. 1986–1998, Apr. 2016.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.OptimalQuadraticMinorizer}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::OptimalQuadraticMinorizer)\n\nMinorize maximize update of λj using quadratic minorizer with optimized curvature.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.QuadraticMinorizer}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::QuadraticMinorizer)\n\nMinorize maximize update of λj using quadratic minorizer.\n\n\n\n\n\n","category":"method"},{"location":"#HePPCAT.updateλj-Tuple{Any, Any, Any, Any, HePPCAT.RootFinding}","page":"Home","title":"HePPCAT.updateλj","text":"updateλj(λj,uj,v,Y,::RootFinding)\n\nRoot-finding (global maximization) update of λj.\n\n\n\n\n\n","category":"method"}]
}
